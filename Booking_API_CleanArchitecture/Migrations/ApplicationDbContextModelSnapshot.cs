// <auto-generated />
using System;
using Booking_Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking_API_CleanArchitecture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking_Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 3, 28, 12, 14, 41, 340, DateTimeKind.Local).AddTicks(4702),
                            Email = "admin@email.com",
                            PasswordHash = new byte[] { 48, 188, 51, 243, 141, 37, 25, 113, 95, 67, 212, 210, 216, 85, 51, 227, 198, 64, 168, 243, 24, 185, 138, 55, 146, 157, 16, 199, 193, 170, 182, 54, 57, 60, 136, 250, 123, 157, 135, 99, 49, 39, 213, 178, 144, 22, 117, 244, 149, 37, 160, 199, 133, 80, 39, 18, 38, 162, 232, 219, 201, 47, 78, 41 },
                            PasswordSalt = new byte[] { 11, 127, 178, 39, 161, 0, 84, 0, 55, 126, 6, 241, 115, 10, 163, 49, 180, 239, 93, 1, 87, 191, 234, 122, 34, 34, 36, 11, 24, 208, 40, 247, 244, 34, 188, 211, 80, 229, 173, 34, 221, 166, 178, 106, 7, 205, 169, 54, 71, 73, 117, 3, 148, 44, 158, 90, 119, 44, 239, 251, 21, 52, 135, 80, 218, 182, 234, 90, 93, 245, 197, 116, 94, 163, 228, 136, 211, 62, 142, 254, 216, 69, 164, 105, 133, 166, 42, 86, 218, 210, 108, 243, 183, 146, 100, 6, 138, 65, 224, 151, 16, 159, 220, 124, 154, 202, 87, 172, 143, 223, 132, 255, 17, 210, 199, 112, 101, 97, 234, 122, 216, 170, 31, 7, 201, 147, 201, 39 },
                            Role = "Admin",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.BookedDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("BookedDates");
                });

            modelBuilder.Entity("Booking_Domain.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Booking_Domain.Models.ExceptionLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("Booking_Domain.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street, City Center",
                            City = "Tbilisi",
                            Name = "Chembers Grand Hotel",
                            hotelImage = "/hotel_images/tbilisi-chembers.JPG"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 River Road, Scenic Area",
                            City = "Kutaisi",
                            Name = "Episode Retreat",
                            hotelImage = "/hotel_images/episode.JPG"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("roomImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomId = 1,
                            roomImage = "/room_images/chembers_grand_hotel-deluxe_king_room-1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            RoomId = 1,
                            roomImage = "/room_images/chembers_grand_hotel-deluxe_king_room-2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            RoomId = 2,
                            roomImage = "/room_images/chembers_grand_hotel-executive_suite-1.jpg"
                        },
                        new
                        {
                            Id = 4,
                            RoomId = 2,
                            roomImage = "/room_images/chembers_grand_hotel-executive_suite-2.jpg"
                        },
                        new
                        {
                            Id = 5,
                            RoomId = 3,
                            roomImage = "/room_images/episode_retreat-riverside_view_room-1.jpg"
                        },
                        new
                        {
                            Id = 6,
                            RoomId = 3,
                            roomImage = "/room_images/episode_retreat-riverside_view_room-2.jpg"
                        },
                        new
                        {
                            Id = 7,
                            RoomId = 4,
                            roomImage = "/room_images/episode_retreat-garden_view_suite-1.jpg"
                        },
                        new
                        {
                            Id = 8,
                            RoomId = 4,
                            roomImage = "/room_images/episode_retreat-garden_view_suite-2.jpg"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("MaximumGuests")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            HotelId = 1,
                            MaximumGuests = 2,
                            Name = "Deluxe King Room",
                            PricePerNight = 250.00m,
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            HotelId = 1,
                            MaximumGuests = 4,
                            Name = "Executive Suite",
                            PricePerNight = 450.00m,
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            HotelId = 2,
                            MaximumGuests = 2,
                            Name = "Riverside View Room",
                            PricePerNight = 200.00m,
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Available = true,
                            HotelId = 2,
                            MaximumGuests = 3,
                            Name = "Garden View Suite",
                            PricePerNight = 350.00m,
                            RoomTypeId = 2
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Single Room"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Double Room"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Triple Room"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Deluxe Room"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "Family Room"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.BookedDate", b =>
                {
                    b.HasOne("Booking_Domain.Models.Room", "Room")
                        .WithMany("BookedDates")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking_Domain.Models.Booking", b =>
                {
                    b.HasOne("Booking_Domain.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking_Domain.Models.Image", b =>
                {
                    b.HasOne("Booking_Domain.Models.Room", "Room")
                        .WithMany("Images")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking_Domain.Models.Room", b =>
                {
                    b.HasOne("Booking_Domain.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booking_Domain.Models.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Booking_Domain.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Booking_Domain.Models.Room", b =>
                {
                    b.Navigation("BookedDates");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
