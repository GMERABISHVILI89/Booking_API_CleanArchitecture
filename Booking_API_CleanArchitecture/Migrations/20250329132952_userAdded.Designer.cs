// <auto-generated />
using System;
using Booking_Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking_API_CleanArchitecture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250329132952_userAdded")]
    partial class userAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking_Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 3, 29, 17, 29, 51, 296, DateTimeKind.Local).AddTicks(7349),
                            Email = "admin@email.com",
                            PasswordHash = new byte[] { 227, 189, 1, 219, 160, 55, 24, 58, 65, 6, 222, 69, 190, 81, 208, 64, 6, 197, 190, 119, 203, 28, 229, 5, 114, 215, 159, 22, 201, 14, 140, 170, 188, 255, 44, 125, 155, 156, 166, 29, 212, 29, 194, 212, 97, 31, 124, 169, 160, 182, 191, 29, 155, 131, 136, 102, 27, 125, 61, 171, 43, 39, 205, 96 },
                            PasswordSalt = new byte[] { 97, 64, 80, 2, 143, 91, 190, 238, 151, 220, 119, 195, 101, 197, 201, 37, 227, 87, 198, 199, 46, 119, 148, 165, 145, 181, 4, 115, 247, 57, 166, 115, 131, 208, 30, 35, 232, 237, 246, 85, 182, 79, 8, 173, 197, 170, 35, 163, 224, 181, 209, 146, 221, 76, 114, 184, 100, 68, 112, 152, 168, 86, 102, 46, 1, 94, 208, 178, 232, 157, 132, 235, 192, 57, 88, 196, 57, 70, 99, 152, 197, 187, 133, 93, 73, 74, 205, 222, 18, 132, 115, 117, 131, 226, 242, 216, 153, 147, 156, 160, 162, 194, 190, 100, 248, 64, 150, 214, 113, 10, 222, 125, 10, 245, 32, 72, 190, 113, 243, 98, 167, 255, 56, 127, 104, 130, 99, 220 },
                            Role = "Admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 3, 29, 17, 29, 51, 296, DateTimeKind.Local).AddTicks(7422),
                            Email = "user@email.com",
                            PasswordHash = new byte[] { 248, 204, 23, 176, 145, 22, 108, 218, 243, 146, 23, 214, 182, 197, 22, 119, 202, 253, 64, 165, 145, 60, 95, 32, 67, 136, 164, 117, 203, 50, 68, 132, 131, 223, 179, 203, 67, 196, 73, 55, 188, 172, 132, 234, 48, 116, 118, 106, 136, 27, 95, 71, 25, 27, 24, 49, 151, 162, 46, 224, 84, 182, 208, 13 },
                            PasswordSalt = new byte[] { 24, 33, 12, 96, 93, 251, 50, 73, 112, 240, 63, 45, 181, 67, 11, 247, 45, 69, 68, 254, 16, 31, 220, 161, 238, 133, 36, 232, 219, 178, 193, 95, 237, 79, 21, 16, 103, 212, 213, 89, 13, 147, 222, 120, 32, 242, 0, 183, 245, 132, 63, 124, 148, 221, 213, 43, 114, 20, 129, 122, 55, 228, 166, 43, 251, 44, 71, 92, 183, 148, 100, 94, 109, 207, 56, 247, 55, 23, 143, 179, 96, 127, 241, 191, 76, 32, 108, 57, 96, 132, 99, 118, 252, 243, 136, 14, 169, 249, 162, 137, 195, 112, 0, 184, 189, 163, 164, 221, 228, 18, 67, 226, 198, 18, 132, 71, 76, 186, 73, 30, 136, 64, 200, 97, 98, 67, 201, 114 },
                            Role = "User",
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.BookedDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("BookedDates");
                });

            modelBuilder.Entity("Booking_Domain.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Booking_Domain.Models.ExceptionLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("Booking_Domain.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street, City Center",
                            City = "Tbilisi",
                            Name = "Chembers Grand Hotel",
                            hotelImage = "/hotel_images/tbilisi-chembers.JPG"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 River Road, Scenic Area",
                            City = "Kutaisi",
                            Name = "Episode Retreat",
                            hotelImage = "/hotel_images/episode.JPG"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("roomImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomId = 1,
                            roomImage = "/room_images/chembers_grand_hotel-deluxe_king_room-1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            RoomId = 1,
                            roomImage = "/room_images/chembers_grand_hotel-deluxe_king_room-2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            RoomId = 2,
                            roomImage = "/room_images/chembers_grand_hotel-executive_suite-1.jpg"
                        },
                        new
                        {
                            Id = 4,
                            RoomId = 2,
                            roomImage = "/room_images/chembers_grand_hotel-executive_suite-2.jpg"
                        },
                        new
                        {
                            Id = 5,
                            RoomId = 3,
                            roomImage = "/room_images/episode_retreat-riverside_view_room-1.jpg"
                        },
                        new
                        {
                            Id = 6,
                            RoomId = 3,
                            roomImage = "/room_images/episode_retreat-riverside_view_room-2.jpg"
                        },
                        new
                        {
                            Id = 7,
                            RoomId = 4,
                            roomImage = "/room_images/episode_retreat-garden_view_suite-1.jpg"
                        },
                        new
                        {
                            Id = 8,
                            RoomId = 4,
                            roomImage = "/room_images/episode_retreat-garden_view_suite-2.jpg"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("MaximumGuests")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            HotelId = 1,
                            MaximumGuests = 2,
                            Name = "Deluxe King Room",
                            PricePerNight = 250.00m,
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            HotelId = 1,
                            MaximumGuests = 4,
                            Name = "Executive Suite",
                            PricePerNight = 450.00m,
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            HotelId = 2,
                            MaximumGuests = 2,
                            Name = "Riverside View Room",
                            PricePerNight = 200.00m,
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Available = true,
                            HotelId = 2,
                            MaximumGuests = 3,
                            Name = "Garden View Suite",
                            PricePerNight = 350.00m,
                            RoomTypeId = 2
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Single Room"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Double Room"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Triple Room"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Deluxe Room"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "Family Room"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.BookedDate", b =>
                {
                    b.HasOne("Booking_Domain.Models.Room", "Room")
                        .WithMany("BookedDates")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking_Domain.Models.Booking", b =>
                {
                    b.HasOne("Booking_Domain.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking_Domain.Models.Image", b =>
                {
                    b.HasOne("Booking_Domain.Models.Room", "Room")
                        .WithMany("Images")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking_Domain.Models.Room", b =>
                {
                    b.HasOne("Booking_Domain.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booking_Domain.Models.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Booking_Domain.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Booking_Domain.Models.Room", b =>
                {
                    b.Navigation("BookedDates");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
