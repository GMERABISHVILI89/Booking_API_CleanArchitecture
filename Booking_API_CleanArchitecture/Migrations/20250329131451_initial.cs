using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Booking_API_CleanArchitecture.Migrations
{
    /// <inheritdoc />
    public partial class initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreateDate", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2025, 3, 29, 17, 14, 48, 701, DateTimeKind.Local).AddTicks(8926), new byte[] { 175, 88, 219, 93, 72, 98, 203, 9, 226, 215, 39, 97, 186, 118, 195, 78, 5, 93, 21, 147, 91, 43, 84, 180, 167, 45, 88, 73, 27, 2, 255, 36, 96, 10, 125, 141, 191, 75, 5, 4, 56, 44, 130, 152, 209, 208, 153, 157, 193, 30, 207, 69, 89, 138, 239, 9, 93, 122, 235, 252, 214, 6, 190, 146 }, new byte[] { 189, 223, 51, 201, 39, 153, 175, 91, 229, 94, 247, 225, 138, 71, 211, 16, 101, 124, 207, 230, 255, 217, 235, 148, 181, 107, 250, 15, 87, 122, 51, 252, 147, 33, 237, 45, 129, 176, 30, 200, 95, 43, 136, 59, 0, 172, 149, 16, 255, 137, 93, 83, 94, 82, 68, 111, 37, 138, 97, 24, 108, 35, 109, 65, 156, 194, 196, 4, 126, 4, 166, 125, 204, 251, 3, 65, 47, 114, 231, 10, 249, 13, 181, 20, 195, 52, 195, 119, 185, 49, 101, 150, 142, 134, 247, 220, 252, 7, 196, 102, 93, 216, 141, 197, 236, 75, 216, 107, 123, 64, 244, 171, 244, 33, 212, 194, 82, 127, 115, 200, 42, 128, 9, 63, 240, 235, 94, 250 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "CreateDate", "PasswordHash", "PasswordSalt" },
                values: new object[] { new DateTime(2025, 3, 28, 12, 14, 41, 340, DateTimeKind.Local).AddTicks(4702), new byte[] { 48, 188, 51, 243, 141, 37, 25, 113, 95, 67, 212, 210, 216, 85, 51, 227, 198, 64, 168, 243, 24, 185, 138, 55, 146, 157, 16, 199, 193, 170, 182, 54, 57, 60, 136, 250, 123, 157, 135, 99, 49, 39, 213, 178, 144, 22, 117, 244, 149, 37, 160, 199, 133, 80, 39, 18, 38, 162, 232, 219, 201, 47, 78, 41 }, new byte[] { 11, 127, 178, 39, 161, 0, 84, 0, 55, 126, 6, 241, 115, 10, 163, 49, 180, 239, 93, 1, 87, 191, 234, 122, 34, 34, 36, 11, 24, 208, 40, 247, 244, 34, 188, 211, 80, 229, 173, 34, 221, 166, 178, 106, 7, 205, 169, 54, 71, 73, 117, 3, 148, 44, 158, 90, 119, 44, 239, 251, 21, 52, 135, 80, 218, 182, 234, 90, 93, 245, 197, 116, 94, 163, 228, 136, 211, 62, 142, 254, 216, 69, 164, 105, 133, 166, 42, 86, 218, 210, 108, 243, 183, 146, 100, 6, 138, 65, 224, 151, 16, 159, 220, 124, 154, 202, 87, 172, 143, 223, 132, 255, 17, 210, 199, 112, 101, 97, 234, 122, 216, 170, 31, 7, 201, 147, 201, 39 } });
        }
    }
}
