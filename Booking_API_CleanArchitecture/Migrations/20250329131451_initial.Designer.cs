// <auto-generated />
using System;
using Booking_Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking_API_CleanArchitecture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250329131451_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking_Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 3, 29, 17, 14, 48, 701, DateTimeKind.Local).AddTicks(8926),
                            Email = "admin@email.com",
                            PasswordHash = new byte[] { 175, 88, 219, 93, 72, 98, 203, 9, 226, 215, 39, 97, 186, 118, 195, 78, 5, 93, 21, 147, 91, 43, 84, 180, 167, 45, 88, 73, 27, 2, 255, 36, 96, 10, 125, 141, 191, 75, 5, 4, 56, 44, 130, 152, 209, 208, 153, 157, 193, 30, 207, 69, 89, 138, 239, 9, 93, 122, 235, 252, 214, 6, 190, 146 },
                            PasswordSalt = new byte[] { 189, 223, 51, 201, 39, 153, 175, 91, 229, 94, 247, 225, 138, 71, 211, 16, 101, 124, 207, 230, 255, 217, 235, 148, 181, 107, 250, 15, 87, 122, 51, 252, 147, 33, 237, 45, 129, 176, 30, 200, 95, 43, 136, 59, 0, 172, 149, 16, 255, 137, 93, 83, 94, 82, 68, 111, 37, 138, 97, 24, 108, 35, 109, 65, 156, 194, 196, 4, 126, 4, 166, 125, 204, 251, 3, 65, 47, 114, 231, 10, 249, 13, 181, 20, 195, 52, 195, 119, 185, 49, 101, 150, 142, 134, 247, 220, 252, 7, 196, 102, 93, 216, 141, 197, 236, 75, 216, 107, 123, 64, 244, 171, 244, 33, 212, 194, 82, 127, 115, 200, 42, 128, 9, 63, 240, 235, 94, 250 },
                            Role = "Admin",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.BookedDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("BookedDates");
                });

            modelBuilder.Entity("Booking_Domain.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Booking_Domain.Models.ExceptionLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExceptionLogs");
                });

            modelBuilder.Entity("Booking_Domain.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotelImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street, City Center",
                            City = "Tbilisi",
                            Name = "Chembers Grand Hotel",
                            hotelImage = "/hotel_images/tbilisi-chembers.JPG"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 River Road, Scenic Area",
                            City = "Kutaisi",
                            Name = "Episode Retreat",
                            hotelImage = "/hotel_images/episode.JPG"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("roomImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomId = 1,
                            roomImage = "/room_images/chembers_grand_hotel-deluxe_king_room-1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            RoomId = 1,
                            roomImage = "/room_images/chembers_grand_hotel-deluxe_king_room-2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            RoomId = 2,
                            roomImage = "/room_images/chembers_grand_hotel-executive_suite-1.jpg"
                        },
                        new
                        {
                            Id = 4,
                            RoomId = 2,
                            roomImage = "/room_images/chembers_grand_hotel-executive_suite-2.jpg"
                        },
                        new
                        {
                            Id = 5,
                            RoomId = 3,
                            roomImage = "/room_images/episode_retreat-riverside_view_room-1.jpg"
                        },
                        new
                        {
                            Id = 6,
                            RoomId = 3,
                            roomImage = "/room_images/episode_retreat-riverside_view_room-2.jpg"
                        },
                        new
                        {
                            Id = 7,
                            RoomId = 4,
                            roomImage = "/room_images/episode_retreat-garden_view_suite-1.jpg"
                        },
                        new
                        {
                            Id = 8,
                            RoomId = 4,
                            roomImage = "/room_images/episode_retreat-garden_view_suite-2.jpg"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("MaximumGuests")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            HotelId = 1,
                            MaximumGuests = 2,
                            Name = "Deluxe King Room",
                            PricePerNight = 250.00m,
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            HotelId = 1,
                            MaximumGuests = 4,
                            Name = "Executive Suite",
                            PricePerNight = 450.00m,
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            HotelId = 2,
                            MaximumGuests = 2,
                            Name = "Riverside View Room",
                            PricePerNight = 200.00m,
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Available = true,
                            HotelId = 2,
                            MaximumGuests = 3,
                            Name = "Garden View Suite",
                            PricePerNight = 350.00m,
                            RoomTypeId = 2
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Single Room"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Double Room"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Triple Room"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Deluxe Room"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "Family Room"
                        });
                });

            modelBuilder.Entity("Booking_Domain.Models.BookedDate", b =>
                {
                    b.HasOne("Booking_Domain.Models.Room", "Room")
                        .WithMany("BookedDates")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking_Domain.Models.Booking", b =>
                {
                    b.HasOne("Booking_Domain.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking_Domain.Models.Image", b =>
                {
                    b.HasOne("Booking_Domain.Models.Room", "Room")
                        .WithMany("Images")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Booking_Domain.Models.Room", b =>
                {
                    b.HasOne("Booking_Domain.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booking_Domain.Models.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Booking_Domain.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Booking_Domain.Models.Room", b =>
                {
                    b.Navigation("BookedDates");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
